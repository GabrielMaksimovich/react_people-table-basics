{"version":3,"sources":["components/CustomNavLink.tsx","components/Navigation/Navigation.tsx","App.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/HomePage/HomePage.tsx","components/NotFoundPage/NotFoundPage.tsx","index.tsx"],"names":["CustomNavLink","props","to","title","className","isActive","cn","Navigation","App","role","Loader","memo","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","slug","sex","name","PeopleTable","people","useParams","fields","useMemo","id","fieldName","map","field","born","died","mother","motherName","father","fatherName","PeoplePage","useState","setPeople","isLoading","setIsLoading","errorMessage","setErrorMessage","loadedPeople","loadPeople","peopleWithParents","find","f","m","hasNoPeople","length","useEffect","HomePage","NotFoundPage","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.904a7cbb.chunk.js","sourcesContent":["import * as React from 'react';\nimport { NavLink, To } from 'react-router-dom';\nimport cn from 'classnames';\n\ntype Props = {\n  to: To;\n  title: string;\n};\nexport const CustomNavLink: React.FC<Props> = (props: Props) => {\n  const { to, title } = props;\n\n  return (\n    <NavLink\n      className={({ isActive }) => cn('navbar-item',\n        { 'has-background-grey-lighter': isActive })}\n      to={to}\n    >\n      {title}\n    </NavLink>\n  );\n};\n","import { FC } from 'react';\nimport { CustomNavLink } from '../CustomNavLink';\n\nexport const Navigation: FC = () => {\n  return (\n    <div className=\"navbar-brand\">\n      <CustomNavLink\n        to=\"/\"\n        title=\"Home\"\n      />\n\n      <CustomNavLink\n        to=\"/people\"\n        title=\"People\"\n      />\n    </div>\n  );\n};\n","import {\n  Outlet,\n} from 'react-router-dom';\n\nimport { Navigation } from './components/Navigation/Navigation';\n\nimport './App.scss';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <Navigation />\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import './Loader.scss';\nimport React, { memo } from 'react';\n\nexport const Loader: React.FC = memo(() => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n));\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React, { memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport cn from 'classnames';\n\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = memo(({ person }) => {\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={cn({ 'has-text-danger': person.sex === 'f' })}\n    >\n      {person.name}\n    </Link>\n  );\n});\n","import { FC, useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  people: Person[]\n};\nexport const PeopleTable: FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  const fields = useMemo(() => [\n    { id: 1, fieldName: 'Name' },\n    { id: 2, fieldName: 'Sex' },\n    { id: 3, fieldName: 'Born' },\n    { id: 4, fieldName: 'Died' },\n    { id: 5, fieldName: 'Mother' },\n    { id: 6, fieldName: 'Father' },\n  ], []);\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {fields.map(field => (\n            <th>{field.fieldName}</th>\n          ))}\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={cn({\n              'has-background-warning': person.slug === slug,\n            })}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n\n            <td>\n              {person.mother\n                ? <PersonLink person={person.mother} />\n                : person.motherName ?? '-'}\n            </td>\n            <td>\n              {person.father\n                ? <PersonLink person={person.father} />\n                : person.fatherName ?? '-'}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, {\n  memo,\n  useEffect,\n  useState,\n} from 'react';\n\nimport { Loader } from '../Loader';\n\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage: React.FC = memo(() => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(false);\n\n  const loadedPeople = async () => {\n    try {\n      setIsLoading(true);\n\n      const loadPeople = await getPeople();\n\n      const peopleWithParents = loadPeople.map(person => {\n        const father = loadPeople.find(f => f.name === person.fatherName);\n        const mother = loadPeople.find(m => m.name === person.motherName);\n\n        return (\n          {\n            ...person,\n            father,\n            mother,\n          }\n        );\n      });\n\n      setPeople(peopleWithParents);\n    } catch {\n      setErrorMessage(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const hasNoPeople = !isLoading && !people.length;\n\n  useEffect(() => {\n    loadedPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {errorMessage && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {hasNoPeople && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!isLoading && (\n            <PeopleTable people={people} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n});\n","import { FC } from 'react';\n\nexport const HomePage: FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { FC } from 'react';\n\nexport const NotFoundPage: FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter as Router,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n\n          <Route path=\"/people\">\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}