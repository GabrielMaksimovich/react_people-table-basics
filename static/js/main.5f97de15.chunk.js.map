{"version":3,"sources":["components/CustomNavLink.tsx","components/Navigation/Navigation.tsx","App.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","api.ts","components/PeoplePage/PeoplePage.tsx","components/HomePage/HomePage.tsx","components/NotFoundPage/NotFoundPage.tsx","index.tsx"],"names":["CustomNavLink","props","to","title","className","isActive","cn","Navigation","App","role","Loader","memo","PersonLink","person","slug","sex","name","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","people","setPeople","isLoading","setIsLoading","errorMessage","setErrorMessage","useParams","loadedPeople","loadPeople","peopleWithParents","map","father","find","f","fatherName","mother","m","motherName","fields","useMemo","id","fieldName","useEffect","length","field","born","died","HomePage","NotFoundPage","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.5f97de15.chunk.js","sourcesContent":["import * as React from 'react';\nimport { NavLink, To } from 'react-router-dom';\nimport cn from 'classnames';\n\ntype Props = {\n  to: To;\n  title: string;\n};\nexport const CustomNavLink: React.FC<Props> = (props: Props) => {\n  const { to, title } = props;\n\n  return (\n    <NavLink\n      className={({ isActive }) => cn('navbar-item',\n        { 'has-background-grey-lighter': isActive })}\n      to={to}\n    >\n      {title}\n    </NavLink>\n  );\n};\n","import { FC } from 'react';\nimport { CustomNavLink } from '../CustomNavLink';\n\nexport const Navigation: FC = () => {\n  return (\n    <div className=\"navbar-brand\">\n      <CustomNavLink\n        to=\"/\"\n        title=\"Home\"\n      />\n\n      <CustomNavLink\n        to=\"/people\"\n        title=\"People\"\n      />\n    </div>\n  );\n};\n","import {\n  Outlet,\n} from 'react-router-dom';\n\nimport { Navigation } from './components/Navigation/Navigation';\n\nimport './App.scss';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <Navigation />\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import './Loader.scss';\nimport React, { memo } from 'react';\n\nexport const Loader: React.FC = memo(() => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n));\n","import React, { memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport cn from 'classnames';\n\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = memo(({ person }) => {\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={cn({ 'has-text-danger': person.sex === 'f' })}\n    >\n      {person.name}\n    </Link>\n  );\n});\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React, {\n  memo,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Loader } from '../Loader';\n\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\nimport { getPeople } from '../../api';\n\nexport const PeoplePage: React.FC = memo(() => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const { slug } = useParams();\n\n  const loadedPeople = async () => {\n    setIsLoading(true);\n\n    try {\n      const loadPeople = await getPeople();\n\n      const peopleWithParents = loadPeople.map(person => {\n        const father = loadPeople.find(f => f.name === person.fatherName);\n        const mother = loadPeople.find(m => m.name === person.motherName);\n\n        return (\n          {\n            ...person,\n            father,\n            mother,\n          }\n        );\n      });\n\n      setPeople(peopleWithParents);\n    } catch (error) {\n      setErrorMessage('Something went wrong');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const fields = useMemo(() => [\n    { id: 1, fieldName: 'Name' },\n    { id: 2, fieldName: 'Sex' },\n    { id: 3, fieldName: 'Born' },\n    { id: 4, fieldName: 'Died' },\n    { id: 5, fieldName: 'Mother' },\n    { id: 6, fieldName: 'Father' },\n  ], []);\n\n  useEffect(() => {\n    loadedPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {errorMessage && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!people.length && !isLoading && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!isLoading && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  {fields.map(field => (\n                    <th>{field.fieldName}</th>\n                  ))}\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map(person => (\n                  <tr\n                    data-cy=\"person\"\n                    key={person.slug}\n                    className={cn({\n                      'has-background-warning': person.slug === slug,\n                    })}\n                  >\n                    <td>\n                      <PersonLink person={person} />\n                    </td>\n\n                    <td>{person.sex}</td>\n                    <td>{person.born}</td>\n                    <td>{person.died}</td>\n\n                    <td>\n                      {person.mother\n                        ? <PersonLink person={person.mother} />\n                        : person.motherName || '-'}\n                    </td>\n                    <td>\n                      {person.father\n                        ? <PersonLink person={person.father} />\n                        : person.fatherName || '-'}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n});\n","import { FC } from 'react';\n\nexport const HomePage: FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { FC } from 'react';\n\nexport const NotFoundPage: FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter as Router,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}